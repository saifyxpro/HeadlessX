# HeadlessX Nginx Configuration Template
# Place this file in /etc/nginx/sites-available/headlessx
# 
# IMPORTANT: Replace YOUR_DOMAIN_HERE with your actual domain
# Example: If your domain is headlessx.saify.me, replace YOUR_DOMAIN_HERE with headlessx.saify.me
# 
# The setup script will automatically replace this placeholder with your actual domain from .env

server {
    listen 80;
    server_name YOUR_DOMAIN_HERE;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Common proxy settings for all locations
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Common buffer settings
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Health check endpoint - highest rate limit (most specific first)
    location = /api/health {
        limit_req zone=health burst=50 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:3000;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # API endpoints - moderate rate limit
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:3000;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;  # Longer timeout for scraping operations
    }
    
    # Website and other requests - standard rate limit
    location / {
        limit_req zone=website burst=50 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:3000;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Block common attack vectors and bot paths
    location ~ ^/(wp-admin|admin|phpmyadmin|xmlrpc\.php|wp-login\.php) {
        return 404;
    }
    
    # Allow Let's Encrypt verification
    location ~ ^/\.well-known/acme-challenge/ {
        allow all;
    }
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
    }
    
    # Favicon and robots.txt (served by Node.js server)
    location = /favicon.ico {
        proxy_pass http://127.0.0.1:3000;
        log_not_found off;
        access_log off;
        expires 1d;
    }
    
    location = /robots.txt {
        proxy_pass http://127.0.0.1:3000;
        log_not_found off;
        access_log off;
        expires 1d;
    }
    
    # Custom error pages
    error_page 429 @error_429;
    error_page 404 @error_404;  
    error_page 500 502 503 504 @error_5xx;
    
    location @error_429 {
        internal;
        add_header Content-Type "text/plain; charset=utf-8" always;
        return 200 "Rate limit exceeded. Please try again later.";
    }
    
    location @error_404 {
        internal;
        add_header Content-Type "text/plain; charset=utf-8" always;
        return 404 "Page not found.";
    }
    
    location @error_5xx {
        internal;
        add_header Content-Type "text/plain; charset=utf-8" always;
        return 500 "Server error. Please try again later.";
    }
}

# SSL configuration will be added automatically by certbot
# when you run: sudo certbot --nginx -d YOUR_DOMAIN_HERE

# Additional server block for www redirect (optional)
server {
    listen 80;
    server_name www.YOUR_DOMAIN_HERE;
    return 301 $scheme://YOUR_DOMAIN_HERE$request_uri;
}